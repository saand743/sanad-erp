# 🎯 نظام سند لإدارة الموارد (Sanad ERP System) - الإصدار 2.1

مرحباً بك في ملف التوثيق الرسمي لنظام سند لإدارة الموارد. هذا الملف هو مرجعك الأساسي لفهم المشروع، إعداده، وتشغيله.

---

## 📜 عن المشروع

نظام سند هو نظام تخطيط موارد مؤسسات (ERP) متكامل مبني باستخدام أحدث التقنيات (Next.js & PostgreSQL)، مصمم ليكون سريعاً، آمناً، وسهل الاستخدام. يهدف النظام إلى مساعدة الشركات الصغيرة والمتوسطة على إدارة عملياتها اليومية بكفاءة عالية.

---

## 📊 حالة المشروع الحالية

- **الواجهة الخلفية (Backend):** مكتملة بنسبة **95%**. جميع وحدات الـ API متصلة فعليًا بقاعدة البيانات، وتم توحيد جميع العمليات البرمجية، مع دعم كامل للصلاحيات والتوثيق.
- **الواجهة الأمامية (Frontend):** مكتملة بنسبة **40%**. الهيكل والصفحات الأساسية جاهزة، لكن بعض الصفحات ما زالت تعتمد على بيانات وهمية (Mock Data) وتحتاج ربط كامل مع الـ API.

---

## ✨ الوحدات والميزات الأساسية

النظام يحتوي على مجموعة متكاملة من الوحدات التي تعمل معاً بسلاسة:

- **🔐 إدارة المستخدمين والصلاحيات:** نظام تسجيل دخول آمن، إدارة كاملة للمستخدمين والأدوار والصلاحيات، مع دعم الربط الديناميكي مع قاعدة البيانات.
- **📊 لوحة التحكم:** إحصائيات ورسوم بيانية فورية عن أداء العمل.
- **📦 إدارة المخزون:** تتبع المنتجات والكميات، تنبيهات عند انخفاض المخزون، دعم الجرد والتسويات.
- **💰 المبيعات والمشتريات:** إنشاء وإدارة الفواتير، تحديث تلقائي للمخزون، دعم معاملات قاعدة البيانات (Transactions).
- **👥 إدارة العملاء والموردين:** قاعدة بيانات مركزية للعملاء والموردين، دعم عمليات البحث والتعديل والحذف.
- **💵 الخزنة والمصروفات:** تتبع جميع الحركات المالية من مقبوضات ومدفوعات ومصروفات.
- **🖨️ طباعة الباركود:** أداة مدمجة لتصميم وطباعة بطاقات الباركود للمنتجات.
- **📝 التقارير والتحليلات:** أداة متقدمة لبناء التقارير المخصصة وتحليل البيانات (قيد التطوير).
- **🛡️ النسخ الاحتياطي والاستعادة:** دعم النسخ الاحتياطي التلقائي واليدوي للبيانات.
- **🎫 نظام الدعم الفني:** نظام تذاكر دعم متكامل (مكتمل).

---

## 🚦 النواقص الحالية

- بعض صفحات الواجهة الأمامية ما زالت تعتمد على بيانات وهمية وتحتاج ربط كامل مع الـ API.
- وحدة النظام المالي (شجرة الحسابات والقيود) في مرحلة التصميم ولم تُنفذ بالكامل.
- بعض تقارير التحليل المتقدم وواجهات عرض التقارير تحتاج تطوير إضافي.
- لا يوجد حتى الآن دعم كامل لتعدد الفروع في الواجهة الأمامية (مدعوم في قاعدة البيانات).
- بعض عمليات التدقيق (audit log) ما زالت تعتمد على بيانات وهمية وتحتاج ربط فعلي مع قاعدة البيانات.

---

## 🛠️ التقنيات المستخدمة

- **إطار العمل (Framework):** Next.js 14 (React)
- **لغة البرمجة:** JavaScript
- **قاعدة البيانات:** PostgreSQL
- **التصميم:** Tailwind CSS
- **المصادقة:** JWT (JSON Web Tokens) & bcryptjs
- **مكتبات إضافية:** Recharts (للرسوم البيانية), React-Hot-Toast (للتنبيهات).

---

## 🚀 أوامر الإعداد والتشغيل

### 1. تثبيت الاعتمادياتnpm install
### 2. إعداد ملف الأسرار
أنشئ ملف `.env.local` في المجلد الرئيسي للمشروع:
JWT_SECRET=... (مفتاح التشفير)
POSTGRES_URL=... (رابط قاعدة البيانات)
### 3. تجهيز قاعدة البيانات
نفذ ملف `schema.sql` لإنشاء الجداول المطلوبة.

### 4. تشغيل خادم التطويرnpm run dev
---

## 📁 هيكل المشروع

- **src/app/**: صفحات الواجهة الأمامية.
- **src/app/api/**: جميع ملفات الواجهة الخلفية (API).
- **src/lib/**: ملفات المساعدة (مثل db.js).
- **src/components/**: مكونات الواجهة القابلة لإعادة الاستخدام.
- **public/**: ملفات ثابتة (صور، شعارات).

---

## 🤖 المهام المجدولة (Cron Jobs)

المشروع يدعم المهام المجدولة عبر Vercel (`vercel.json`).

---

## 📝 ملاحظات إضافية

- جميع العمليات البرمجية (إضافة، تعديل، حذف، بحث، تصدير، طباعة) تعمل بكفاءة في كل وحدة متصلة فعليًا بقاعدة البيانات.
- النظام يدعم التوثيق البرمجي الداخلي والتعليقات الموحدة.
- جميع الاستجابات البرمجية موحدة لتسهيل التعامل مع الواجهة الأمامية.
- النظام يدعم النسخ الاحتياطي والاستعادة بشكل احترافي.

---

## ❗ النواقص والتطويرات المقترحة

- ربط جميع صفحات الواجهة الأمامية بالـ API وإلغاء الاعتماد على البيانات الوهمية.
- تطوير وحدة النظام المالي (شجرة الحسابات والقيود).
- تطوير واجهات عرض وتحليل التقارير بشكل متقدم.
- ربط سجل التدقيق (audit log) فعليًا بقاعدة البيانات.
- دعم كامل لتعدد الفروع في الواجهة الأمامية.

---

لأي استفسار أو دعم فني، يرجى التواصل مع فريق التطوير أو مراجعة نظام التذاكر المدمج.