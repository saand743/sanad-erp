import React, { useState, useEffect } from 'react';
import toast from 'react-hot-toast';

export default function AccountsPage() {
  const [accounts, setAccounts] = useState([]);
  const [branches, setBranches] = useState([]);
  const [selectedBranch, setSelectedBranch] = useState('');
  const [loading, setLoading] = useState(true);
  const [form, setForm] = useState({
    parent_id: '',
    code: '',
    name_ar: '',
    name_en: '',
    type: 'asset',
    is_active: true,
    level: 1,
    branch_id: '',
  });

  useEffect(() => {
    fetchBranches();
  }, []);

  useEffect(() => {
    if (selectedBranch) fetchAccounts(selectedBranch);
  }, [selectedBranch]);

  const fetchBranches = async () => {
    try {
      const response = await fetch('/api/branches');
      const data = await response.json();
      if (data.success) {
        setBranches(data.branches);
        setSelectedBranch(data.branches[0]?.id || '');
        setForm(f => ({ ...f, branch_id: data.branches[0]?.id || '' }));
      }
    } catch (error) {
      toast.error('فشل في جلب الفروع');
    }
  };

  const fetchAccounts = async (branchId) => {
    setLoading(true);
    try {
      const response = await fetch(`/api/accounts?branch_id=${branchId}`);
      const data = await response.json();
      if (data.success) {
        setAccounts(data.accounts);
      } else {
        toast.error(data.error || 'فشل في جلب الحسابات');
      }
    } catch (error) {
      toast.error('خطأ في الشبكة عند جلب الحسابات');
    } finally {
      setLoading(false);
    }
  };

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setForm((prev) => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch('/api/accounts', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(form),
      });
      const data = await response.json();
      if (data.success) {
        toast.success('تم إضافة الحساب بنجاح');
        setForm({ parent_id: '', code: '', name_ar: '', name_en: '', type: 'asset', is_active: true, level: 1, branch_id: selectedBranch });
        fetchAccounts(selectedBranch);
      } else {
        toast.error(data.error || 'فشل في إضافة الحساب');
      }
    } catch (error) {
      toast.error('خطأ في الشبكة عند إضافة الحساب');
    }
  };

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold text-gray-900">شجرة الحسابات</h1>
      <div className="mb-4">
        <label className="block mb-1">اختر الفرع</label>
        <select value={selectedBranch} onChange={e => { setSelectedBranch(e.target.value); setForm(f => ({ ...f, branch_id: e.target.value })); }} className="border rounded px-3 py-2">
          {branches.map(branch => (
            <option key={branch.id} value={branch.id}>{branch.name}</option>
          ))}
        </select>
      </div>
      <form onSubmit={handleSubmit} className="bg-white rounded-lg shadow p-6 mb-6 space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block mb-1">رمز الحساب</label>
            <input name="code" value={form.code} onChange={handleChange} required className="border rounded px-3 py-2 w-full" />
          </div>
          <div>
            <label className="block mb-1">اسم الحساب (عربي)</label>
            <input name="name_ar" value={form.name_ar} onChange={handleChange} required className="border rounded px-3 py-2 w-full" />
          </div>
          <div>
            <label className="block mb-1">اسم الحساب (إنجليزي)</label>
            <input name="name_en" value={form.name_en} onChange={handleChange} className="border rounded px-3 py-2 w-full" />
          </div>
          <div>
            <label className="block mb-1">نوع الحساب</label>
            <select name="type" value={form.type} onChange={handleChange} className="border rounded px-3 py-2 w-full">
              <option value="asset">أصول</option>
              <option value="liability">خصوم</option>
              <option value="equity">حقوق ملكية</option>
              <option value="revenue">إيرادات</option>
              <option value="expense">مصروفات</option>
            </select>
          </div>
          <div>
            <label className="block mb-1">الحساب الأب</label>
            <select name="parent_id" value={form.parent_id} onChange={handleChange} className="border rounded px-3 py-2 w-full">
              <option value="">بدون</option>
              {accounts.map(acc => (
                <option key={acc.id} value={acc.id}>{acc.name_ar} ({acc.code})</option>
              ))}
            </select>
          </div>
          <div>
            <label className="block mb-1">مستوى الحساب</label>
            <input name="level" type="number" value={form.level} onChange={handleChange} min={1} className="border rounded px-3 py-2 w-full" />
          </div>
          <div className="flex items-center mt-4">
            <input name="is_active" type="checkbox" checked={form.is_active} onChange={handleChange} className="mr-2" />
            <label>نشط</label>
          </div>
        </div>
        <button type="submit" className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">إضافة الحساب</button>
      </form>
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-bold mb-4">قائمة الحسابات</h2>
        {loading ? (
          <div>جاري التحميل...</div>
        ) : (
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">رمز</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">الاسم (عربي)</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">الاسم (إنجليزي)</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">النوع</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">الحساب الأب</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">مستوى</th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">نشط</th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {accounts.map(acc => (
                <tr key={acc.id}>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{acc.code}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">{acc.name_ar}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{acc.name_en}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{acc.type}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{accounts.find(a => a.id === acc.parent_id)?.name_ar || '-'}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{acc.level}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{acc.is_active ? '✔' : '✖'}</td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
    </div>
  );
}
